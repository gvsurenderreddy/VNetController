// Generated by CoffeeScript 1.7.1
(function() {
  this.app = require('zappajs')(8888, function() {
    var topology, util;
    this.configure((function(_this) {
      return function() {
        _this.use('bodyParser', 'methodOverride', _this.app.router, 'static');
        return _this.set({
          'basepath': '/v1.0'
        });
      };
    })(this));
    this.configure({
      development: (function(_this) {
        return function() {
          return _this.use({
            errorHandler: {
              dumpExceptions: true,
              showStack: true
            }
          });
        };
      })(this),
      production: (function(_this) {
        return function() {
          return _this.use('errorHandler');
        };
      })(this)
    });
    this.enable('serve jquery', 'minify');
    topology = require('./Topology');
    util = require('util');
    this.post({
      '/Topology': function() {
        var topodata;
        util.log("POST Topology received" + JSON.stringify(this.body));
        topodata = JSON.parse(JSON.stringify(this.body));
        return topology.create(topodata, (function(_this) {
          return function(res) {
            util.log("POST Topology result " + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Project/:id': function() {
        util.log("GET Project  received" + JSON.stringify(this.params.id));
        return topology.getproject(this.params.id, (function(_this) {
          return function(res) {
            util.log("GET Project result " + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Topology': function() {
        util.log("GET Topology  received" + JSON.stringify(this.body));
        return topology.list((function(_this) {
          return function(res) {
            util.log("GET Topology result " + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Topology/:id/status': function() {
        util.log("GET Topology/id " + this.params.id + "received - topology id ");
        return topology.get(this.params.id, (function(_this) {
          return function(res) {
            util.log("GET Topology/id result " + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this["delete"]({
      '/Topology/:id': function() {
        util.log("DELETE Topology  " + this.params.id + " received");
        return topology.del(this.params.id, (function(_this) {
          return function(res) {
            util.log(("DELETE Topology  " + _this.params.id + " result  ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Topology/:id/device/:did': function() {
        util.log("GET Topology " + this.params.id + "  device id" + this.params.did + "  received");
        return topology.deviceGet(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("GET Topology " + _this.params.id + "  device id" + _this.params.did + " - result ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Topology/:id/device/:did/status': function() {
        util.log("GET Topology " + this.params.id + "  device id" + this.params.did + "  status received");
        return topology.deviceStatus(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("GET Topology " + _this.params.id + "  device id" + _this.params.did + " status result - ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.get({
      '/Topology/:id/device/:did/stats': function() {
        util.log("GET Topology " + this.params.id + "  device id" + this.params.did + "  stats received");
        return topology.deviceStats(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("GET Topology " + _this.params.id + "  device id" + _this.params.did + " stats result") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.put({
      '/Topology/:id/device/:did/start': function() {
        util.log("PUT Topology " + this.params.id + "  device id" + this.params.did + " start received");
        return topology.deviceStart(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("PUT Topology " + _this.params.id + "  device id" + _this.params.did + " start - result") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.put({
      '/Topology/:id/device/:did/stop': function() {
        util.log("PUT Topology " + this.params.id + "  device id" + this.params.did + "  stop received");
        return topology.deviceStop(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("PUT Topology " + _this.params.id + "  device id" + _this.params.did + " stop result - ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.put({
      '/Topology/:id/device/:did/trace': function() {
        util.log("PUT Topology " + this.params.id + "  device id" + this.params.did + "  trace received");
        return topology.deviceTrace(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log(("PUT Topology " + _this.params.id + "  device id" + _this.params.did + " Trace result - ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this["delete"]({
      '/Topology/:id/device/:did': function() {
        util.log("DELETE Topology " + this.params.id + "  device id" + this.params.did + "  delete received");
        return topology.deviceDelete(this.params.id, this.params.did, (function(_this) {
          return function(res) {
            util.log((" DELETE Topology " + _this.params.id + "  device id" + _this.params.did + "  - result ") + res);
            _this.response.setHeader("Access-Control-Allow-Origin", "*");
            return _this.send(res);
          };
        })(this));
      }
    });
    this.post('/Topology/:id/device/:did/service');
    this.get('/Topology/:id/device/:did/service');
    this.get('/Topology/:id/device/:did/service/:id');
    this.put('/Topology/:id/device/:did/service/:id');
    this.put('/Topology/:id/device/:did/service/:id/start');
    return this.put('/Topology/:id/device/:did/service/:id/stop');

    /*   
    @post '/Topology/:id/device/:did/quagga' 
    @get '/Topology/:id/device/:did/quagga' 
    @get '/Topology/:id/device/:did/quagga/:id' 
    @put '/Topology/:id/device/:did/quagga/:id' 
    @put '/Topology/:id/device/:did/quagga/:id/start'
    @put '/Topology/:id/device/:did/quagga/:id/stop'
    
    @post '/Topology/:id/device/:did/snort'
    @get '/Topology/:id/device/:did/snort/:id'
    @put '/Topology/:id/device/:did/snort/:id'
    @put '/Topology/:id/device/:did/snort/:id/start'
    @put '/Topology/:id/device/:did/snort/:id/stop'
    
    @post '/Topology/:id/device/:did/iptables/'
    @get '/Topology/:id/device/:did/iptables/:id'    
    @put '/Topology/:id/device/:did/iptables/:id'
    @put '/Topology/:id/device/:did/iptables/:id/start'
    @put '/Topology/:id/device/:did/iptables/:id/stop'
    
    
    @post '/Topology/:id/device/:did/openvpn/'
    @get '/Topology/:id/device/:did/openvpn/:id'    
    @put '/Topology/:id/device/:did/openvpn/:id'
    @put '/Topology/:id/device/:did/openvpn/:id/start'
    @put '/Topology/:id/device/:did/openvpn/:id/stop'
    
    @post '/Topology/:id/device/:did/strongswan/'
    @get '/Topology/:id/device/:did/strongswan/:id'    
    @put '/Topology/:id/device/:did/strongswan/:id'
    @put '/Topology/:id/device/:did/strongswan/:id/start'
    @put '/Topology/:id/device/:did/strongswan/:id/stop'
     */
  }).app;

}).call(this);
